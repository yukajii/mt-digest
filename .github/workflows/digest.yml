name: MT Digest

permissions:
  contents: write          # ⬅️ new – lets the default GITHUB_TOKEN push

# ——————————————————————————— 1 ———————————————————————————
# Triggers
on:
  # Manual run → form appears with an optional date input
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to fetch (YYYY-MM-DD). Leave blank for auto.'
        required: false
        type: string
  # Run every day at 06:20 UTC.
  schedule:
    - cron: '20 6 * * *'  # Daily at 06:20 UTC

jobs:
  build_send:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣- checkout
      - uses: actions/checkout@v4

      # 2️⃣---- NEW cache: pip wheels + HF models + torch
      - name: Cache pip & models
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/huggingface
            ~/.cache/torch
          key: ${{ runner.os }}-mt-digest-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-mt-digest-

      # 3️⃣- set-up Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 4️⃣- install deps (will be near-instant when cache hits)
      - name: Install deps
        run: pip install -r requirements.txt

      # ——————————————————————————— 3 ———————————————————————————
      # Decide which DATE to use
      - name: Choose DATE
        id: date
        shell: bash
        run: |
          # If manually triggered with a DATE argument, respect it; otherwise use TODAY‑4 days.
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.date }}" ]; then
            DATE="${{ github.event.inputs.date }}"
          else
            DATE=$(date -u -d '4 days ago' +%F)
          fi
          echo "Using DATE=$DATE"
          echo "DATE=$DATE" >> $GITHUB_ENV

      # ——————————————————————————— 4 ———————————————————————————
      # Generate digest & send it
      - name: Build and email digest
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BUTTONDOWN_TOKEN: ${{ secrets.BUTTONDOWN_TOKEN }}
        run: |
          python mt_arxiv_digest.py "$DATE"
          FILE="mt_digest_${DATE}.md"
          if [ -f "$FILE" ]; then
            python send_digest.py "$FILE"
          else
            echo "::warning ::Digest file not found; skipping e-mail."
          fi

      # ——————————————————————————— 5 ———————————————————————————
      # (Optional) push new markdown & logs back to repo
      - name: Commit artefacts
        run: |
          git config user.name  github-actions
          git config user.email github-actions@users.noreply.github.com
          git add mt_digest_*.md logs/* || true
          git commit -m "Auto-digest $DATE" -a || echo "Nothing to commit"
          git push || true
